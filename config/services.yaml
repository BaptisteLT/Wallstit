# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    refresh.token.expiration.seconds: '%env(REFRESH_TOKEN_EXPIRATION_SECONDS)%'
    refresh.token.encoding.passphrase: '%env(REFRESH_TOKEN_ENCODING_PASSPHRASE)%'

    google.oauth2.secret: '%env(GOOGLE_OAUTH2_SECRET)%'
    google.oauth2.client_id: '%env(GOOGLE_OAUTH2_CLIENT_ID)%'
    google.oauth2.redirect_uri: '%env(GOOGLE_OAUTH2_REDIRECT_URI)%'

    discord.oauth2.secret: '%env(DISCORD_OAUTH2_SECRET)%'
    discord.oauth2.client_id: '%env(DISCORD_OAUTH2_CLIENT_ID)%'
    discord.oauth2.redirect_uri: '%env(DISCORD_OAUTH2_REDIRECT_URI)%'

    oauth2.providers:
        google:
            base_login_url: 'https://accounts.google.com/o/oauth2/v2/auth?code_challenge_method=&scope=&access_type=&response_type=&client_id=&redirect_uri=&code_challenge=&state='
            code_challenge_method: 'S256'
            scope: 'profile'
            access_type: 'offline'
            response_type: 'code'
            client_id: '%env(GOOGLE_OAUTH2_CLIENT_ID)%'
            redirect_uri: '%env(GOOGLE_OAUTH2_REDIRECT_URI)%'
            code_challenge: true
        discord:
            base_login_url: 'https://discord.com/api/oauth2/authorize?client_id=&response_type=&redirect_uri=&scope=&state='
            client_id: '%env(DISCORD_OAUTH2_CLIENT_ID)%'
            redirect_uri: '%env(DISCORD_OAUTH2_REDIRECT_URI)%'
            response_type: 'code'
            scope: 'identify'
services:

    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    App\EventListener\ExceptionListener:
        tags: [kernel.event_listener]
    
    App\EventListener\CSRF\SetCSRFListener:
        tags: [kernel.event_listener]

    App\EventListener\CSRF\GetCSRFListener:
        tags: [kernel.event_listener]



    #App\Service\Authentication\OAuth\OAuthAuthenticationService:
    #    autowire: true

    #App\Service\Authentication\OAuth\OAuthApi\GoogleOAuthApiService:
    #    autowire: true

    # Register automatique des services qui implémentent OAuthApiInterface
    _instanceof:
        #Permet d'aller chercher toutes les classes qui implémentent OAuthApiInterface
        App\Service\Authentication\OAuth\OAuthApi\OAuthApiInterface:
            tags: ['app.oauth_api']
    App\Service\Authentication\OAuth\OAuthApi\Factory\OAuthApiFactory:
        arguments:
            # $providers va automatiquement contenir toutes les implémentations de OAuthApiInterface grâce au tag app.oauth_api
            $providers: !tagged_iterator app.oauth_api
